//go:build !ignore_autogenerated

/*
Copyright 2024.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendInfo) DeepCopyInto(out *BackendInfo) {
	*out = *in
	if in.Capabilities != nil {
		in, out := &in.Capabilities, &out.Capabilities
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendInfo.
func (in *BackendInfo) DeepCopy() *BackendInfo {
	if in == nil {
		return nil
	}
	out := new(BackendInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CephExtensions) DeepCopyInto(out *CephExtensions) {
	*out = *in
	if in.MirroringMode != nil {
		in, out := &in.MirroringMode, &out.MirroringMode
		*out = new(string)
		**out = **in
	}
	if in.SchedulingStartTime != nil {
		in, out := &in.SchedulingStartTime, &out.SchedulingStartTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CephExtensions.
func (in *CephExtensions) DeepCopy() *CephExtensions {
	if in == nil {
		return nil
	}
	out := new(CephExtensions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Endpoint) DeepCopyInto(out *Endpoint) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Endpoint.
func (in *Endpoint) DeepCopy() *Endpoint {
	if in == nil {
		return nil
	}
	out := new(Endpoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Extensions) DeepCopyInto(out *Extensions) {
	*out = *in
	if in.Ceph != nil {
		in, out := &in.Ceph, &out.Ceph
		*out = new(CephExtensions)
		(*in).DeepCopyInto(*out)
	}
	if in.Trident != nil {
		in, out := &in.Trident, &out.Trident
		*out = new(TridentExtensions)
		(*in).DeepCopyInto(*out)
	}
	if in.Powerstore != nil {
		in, out := &in.Powerstore, &out.Powerstore
		*out = new(PowerStoreExtensions)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Extensions.
func (in *Extensions) DeepCopy() *Extensions {
	if in == nil {
		return nil
	}
	out := new(Extensions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PowerStoreExtensions) DeepCopyInto(out *PowerStoreExtensions) {
	*out = *in
	if in.RpoSettings != nil {
		in, out := &in.RpoSettings, &out.RpoSettings
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroups != nil {
		in, out := &in.VolumeGroups, &out.VolumeGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PowerStoreExtensions.
func (in *PowerStoreExtensions) DeepCopy() *PowerStoreExtensions {
	if in == nil {
		return nil
	}
	out := new(PowerStoreExtensions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Schedule) DeepCopyInto(out *Schedule) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Schedule.
func (in *Schedule) DeepCopy() *Schedule {
	if in == nil {
		return nil
	}
	out := new(Schedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TridentAction) DeepCopyInto(out *TridentAction) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TridentAction.
func (in *TridentAction) DeepCopy() *TridentAction {
	if in == nil {
		return nil
	}
	out := new(TridentAction)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TridentExtensions) DeepCopyInto(out *TridentExtensions) {
	*out = *in
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = make([]TridentAction, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TridentExtensions.
func (in *TridentExtensions) DeepCopy() *TridentExtensions {
	if in == nil {
		return nil
	}
	out := new(TridentExtensions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedVolumeReplication) DeepCopyInto(out *UnifiedVolumeReplication) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedVolumeReplication.
func (in *UnifiedVolumeReplication) DeepCopy() *UnifiedVolumeReplication {
	if in == nil {
		return nil
	}
	out := new(UnifiedVolumeReplication)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UnifiedVolumeReplication) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedVolumeReplicationList) DeepCopyInto(out *UnifiedVolumeReplicationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]UnifiedVolumeReplication, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedVolumeReplicationList.
func (in *UnifiedVolumeReplicationList) DeepCopy() *UnifiedVolumeReplicationList {
	if in == nil {
		return nil
	}
	out := new(UnifiedVolumeReplicationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UnifiedVolumeReplicationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedVolumeReplicationSpec) DeepCopyInto(out *UnifiedVolumeReplicationSpec) {
	*out = *in
	out.SourceEndpoint = in.SourceEndpoint
	out.DestinationEndpoint = in.DestinationEndpoint
	out.VolumeMapping = in.VolumeMapping
	out.Schedule = in.Schedule
	if in.Extensions != nil {
		in, out := &in.Extensions, &out.Extensions
		*out = new(Extensions)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedVolumeReplicationSpec.
func (in *UnifiedVolumeReplicationSpec) DeepCopy() *UnifiedVolumeReplicationSpec {
	if in == nil {
		return nil
	}
	out := new(UnifiedVolumeReplicationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedVolumeReplicationStatus) DeepCopyInto(out *UnifiedVolumeReplicationStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiscoveredBackends != nil {
		in, out := &in.DiscoveredBackends, &out.DiscoveredBackends
		*out = make([]BackendInfo, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedVolumeReplicationStatus.
func (in *UnifiedVolumeReplicationStatus) DeepCopy() *UnifiedVolumeReplicationStatus {
	if in == nil {
		return nil
	}
	out := new(UnifiedVolumeReplicationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeDestination) DeepCopyInto(out *VolumeDestination) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeDestination.
func (in *VolumeDestination) DeepCopy() *VolumeDestination {
	if in == nil {
		return nil
	}
	out := new(VolumeDestination)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeMapping) DeepCopyInto(out *VolumeMapping) {
	*out = *in
	out.Source = in.Source
	out.Destination = in.Destination
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeMapping.
func (in *VolumeMapping) DeepCopy() *VolumeMapping {
	if in == nil {
		return nil
	}
	out := new(VolumeMapping)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeSource) DeepCopyInto(out *VolumeSource) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeSource.
func (in *VolumeSource) DeepCopy() *VolumeSource {
	if in == nil {
		return nil
	}
	out := new(VolumeSource)
	in.DeepCopyInto(out)
	return out
}
